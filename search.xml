<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[一个简单的vue单项数据流设定下子组件改变父组件数据的方法]]></title>
      <url>/2018/04/03/20180403_2/</url>
      <content type="html"><![CDATA[<p><i>由文档中使用data作为局部数据处理的办法演变而来</i><br><a id="more"></a><br>HTML<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id=&quot;root&quot;&gt;</span><br><span class="line">    &lt;test :msg=&quot;msg&quot; @msgchange=&quot;handleMsgChange&quot;&gt;&lt;/test&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>JS<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Vue.component(&apos;test&apos;, &#123;</span><br><span class="line">    template: &apos;&lt;input v-model=&quot;msgData&quot;&gt;&apos;,</span><br><span class="line">    props: [&apos;msg&apos;],</span><br><span class="line">    data: function () &#123;</span><br><span class="line">        return &#123;</span><br><span class="line">            msgData: this.msg</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    watch: &#123;</span><br><span class="line">        msgData: function () &#123;</span><br><span class="line">            this.$emit(&apos;msgchange&apos;, this.msgData)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">new Vue(&#123;</span><br><span class="line">    el: &quot;#root&quot;,</span><br><span class="line">    data: &#123;</span><br><span class="line">        msg: &apos;hello&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    methods: &#123;</span><br><span class="line">        handleMsgChange: function (val) &#123;</span><br><span class="line">            this.msg = val</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[2017 Easyui 使用总结 （编辑中）]]></title>
      <url>/2018/04/03/20180403/</url>
      <content type="html"><![CDATA[<p><i>即使Easyui的大部分功能实现已经落后于当前的前端技术，但其丰富的功能和超前的思想仍令人赞叹。</i><br><a id="more"></a></p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Easyui作为一个基于jQuery的早期UI框架，给开发者带来了很多益处，极大地缩减了非核心业务外的开发时间。丰富的可配置控件和API让开发变得非常灵活，可以借此实现非常繁杂的业务功能。虽然随着前端技术的发展和业务需求的逐渐庞大，Easyui传统的DOM实现导致了大场景下的性能问题，但其HTML/JS的双风格写法与当下流行的Vue/React框架思想不谋而合，这着实让人感叹。</p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[知是一年春又来，冰雪也消散。]]></title>
      <url>/2018/02/08/20180208/</url>
      <content type="html"><![CDATA[<p><i>2017过去了，2018开始了。</i><br><a id="more"></a></p>
<h2 id="回顾"><a href="#回顾" class="headerlink" title="回顾"></a>回顾</h2><h3 id="我的2017年愿望实现了吗？"><a href="#我的2017年愿望实现了吗？" class="headerlink" title="我的2017年愿望实现了吗？"></a>我的2017年愿望实现了吗？</h3><ol>
<li>工资到达10K ×</li>
<li>一个单反和一件supreme √</li>
<li>喜欢上这座城市 ×</li>
</ol>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><h3 id="为什么我的愿望没有实现？"><a href="#为什么我的愿望没有实现？" class="headerlink" title="为什么我的愿望没有实现？"></a>为什么我的愿望没有实现？</h3><ol>
<li>计划跳槽而尚未跳槽</li>
<li>–</li>
<li>最厌烦的无非上下班挤地铁，应该换一处离工作地近的住所</li>
</ol>
<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><h3 id="2018年该怎么做？"><a href="#2018年该怎么做？" class="headerlink" title="2018年该怎么做？"></a>2018年该怎么做？</h3><ol>
<li>写一份更丰富的简历，换一份薪资更高的工作</li>
<li>–</li>
<li>找到新工作后在附近租一个房子</li>
</ol>
]]></content>
      
        
    </entry>
    
  
  
</search>
